<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="933.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="933.00"> </text><svg id="frames" x="10" width="1180" total_samples="2006717"><g><title>&lt;pbscript::parser::block::Block as pbscript::parser::Parse&gt;::parse (71,553 samples, 3.57%)</title><rect x="0.0000%" y="837" width="3.5657%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="71553"/><text x="0.2500%" y="847.50">&lt;pbs..</text></g><g><title>&lt;pbscript::parser::statement::Statement as pbscript::parser::Parse&gt;::parse (71,553 samples, 3.57%)</title><rect x="0.0000%" y="821" width="3.5657%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="71553"/><text x="0.2500%" y="831.50">&lt;pbs..</text></g><g><title>&lt;pbscript::parser::expression::Expression as pbscript::parser::Parse&gt;::parse (71,553 samples, 3.57%)</title><rect x="0.0000%" y="805" width="3.5657%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="71553"/><text x="0.2500%" y="815.50">&lt;pbs..</text></g><g><title>pbscript::parser::expression::Expression::parse_single (71,553 samples, 3.57%)</title><rect x="0.0000%" y="789" width="3.5657%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="71553"/><text x="0.2500%" y="799.50">pbsc..</text></g><g><title>pbscript::parser::expression::Expression::parse_function_call (71,553 samples, 3.57%)</title><rect x="0.0000%" y="773" width="3.5657%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="71553"/><text x="0.2500%" y="783.50">pbsc..</text></g><g><title>&lt;pbscript::parser::expression::Expression as pbscript::parser::Parse&gt;::parse (71,553 samples, 3.57%)</title><rect x="0.0000%" y="757" width="3.5657%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="71553"/><text x="0.2500%" y="767.50">&lt;pbs..</text></g><g><title>pbscript::parser::expression::Expression::parse_single (71,553 samples, 3.57%)</title><rect x="0.0000%" y="741" width="3.5657%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="71553"/><text x="0.2500%" y="751.50">pbsc..</text></g><g><title>pbscript::parser::expression::Expression::parse_lambda (71,553 samples, 3.57%)</title><rect x="0.0000%" y="725" width="3.5657%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="71553"/><text x="0.2500%" y="735.50">pbsc..</text></g><g><title>pbscript::parser::parse_token (71,553 samples, 3.57%)</title><rect x="0.0000%" y="709" width="3.5657%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="71553"/><text x="0.2500%" y="719.50">pbsc..</text></g><g><title>&lt;pbscript::parser::expression::Expression as pbscript::parser::Parse&gt;::parse (139,851 samples, 6.97%)</title><rect x="0.0000%" y="869" width="6.9691%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="139851"/><text x="0.2500%" y="879.50">&lt;pbscript..</text></g><g><title>pbscript::parser::expression::Expression::parse_single (139,851 samples, 6.97%)</title><rect x="0.0000%" y="853" width="6.9691%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="139851"/><text x="0.2500%" y="863.50">pbscript:..</text></g><g><title>pbscript::parser::expression::Expression::parse_lambda (68,298 samples, 3.40%)</title><rect x="3.5657%" y="837" width="3.4035%" height="15" fill="rgb(240,193,28)" fg:x="71553" fg:w="68298"/><text x="3.8157%" y="847.50">pbs..</text></g><g><title>&lt;pbscript::parser::expression::Expression as pbscript::parser::Parse&gt;::parse (68,298 samples, 3.40%)</title><rect x="3.5657%" y="821" width="3.4035%" height="15" fill="rgb(216,20,37)" fg:x="71553" fg:w="68298"/><text x="3.8157%" y="831.50">&lt;pb..</text></g><g><title>pbscript::parser::expression::Expression::parse_single (68,298 samples, 3.40%)</title><rect x="3.5657%" y="805" width="3.4035%" height="15" fill="rgb(206,188,39)" fg:x="71553" fg:w="68298"/><text x="3.8157%" y="815.50">pbs..</text></g><g><title>&lt;pbscript::parser::block::Block as pbscript::parser::Parse&gt;::parse (68,298 samples, 3.40%)</title><rect x="3.5657%" y="789" width="3.4035%" height="15" fill="rgb(217,207,13)" fg:x="71553" fg:w="68298"/><text x="3.8157%" y="799.50">&lt;pb..</text></g><g><title>&lt;pbscript::parser::statement::Statement as pbscript::parser::Parse&gt;::parse (68,298 samples, 3.40%)</title><rect x="3.5657%" y="773" width="3.4035%" height="15" fill="rgb(231,73,38)" fg:x="71553" fg:w="68298"/><text x="3.8157%" y="783.50">&lt;pb..</text></g><g><title>&lt;pbscript::parser::expression::Expression as pbscript::parser::Parse&gt;::parse (68,298 samples, 3.40%)</title><rect x="3.5657%" y="757" width="3.4035%" height="15" fill="rgb(225,20,46)" fg:x="71553" fg:w="68298"/><text x="3.8157%" y="767.50">&lt;pb..</text></g><g><title>pbscript::parser::expression::Expression::parse_single (68,298 samples, 3.40%)</title><rect x="3.5657%" y="741" width="3.4035%" height="15" fill="rgb(210,31,41)" fg:x="71553" fg:w="68298"/><text x="3.8157%" y="751.50">pbs..</text></g><g><title>pbscript::parser::expression::Expression::parse_function_call (68,298 samples, 3.40%)</title><rect x="3.5657%" y="725" width="3.4035%" height="15" fill="rgb(221,200,47)" fg:x="71553" fg:w="68298"/><text x="3.8157%" y="735.50">pbs..</text></g><g><title>pbscript::lexer::TokenStream::peek_token (68,298 samples, 3.40%)</title><rect x="3.5657%" y="709" width="3.4035%" height="15" fill="rgb(226,26,5)" fg:x="71553" fg:w="68298"/><text x="3.8157%" y="719.50">pbs..</text></g><g><title>pbscript::lexer::TokenStream::peek_nth_token (68,298 samples, 3.40%)</title><rect x="3.5657%" y="693" width="3.4035%" height="15" fill="rgb(249,33,26)" fg:x="71553" fg:w="68298"/><text x="3.8157%" y="703.50">pbs..</text></g><g><title>pbscript::lexer::TokenStream::peek_nth (68,298 samples, 3.40%)</title><rect x="3.5657%" y="677" width="3.4035%" height="15" fill="rgb(235,183,28)" fg:x="71553" fg:w="68298"/><text x="3.8157%" y="687.50">pbs..</text></g><g><title>pbscript::lexer::TokenStream::force_next (68,298 samples, 3.40%)</title><rect x="3.5657%" y="661" width="3.4035%" height="15" fill="rgb(221,5,38)" fg:x="71553" fg:w="68298"/><text x="3.8157%" y="671.50">pbs..</text></g><g><title>alloc::string::String::push (68,298 samples, 3.40%)</title><rect x="3.5657%" y="645" width="3.4035%" height="15" fill="rgb(247,18,42)" fg:x="71553" fg:w="68298"/><text x="3.8157%" y="655.50">all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (68,298 samples, 3.40%)</title><rect x="3.5657%" y="629" width="3.4035%" height="15" fill="rgb(241,131,45)" fg:x="71553" fg:w="68298"/><text x="3.8157%" y="639.50">all..</text></g><g><title>[[heap]] (138,744 samples, 6.91%)</title><rect x="6.9691%" y="869" width="6.9140%" height="15" fill="rgb(249,31,29)" fg:x="139851" fg:w="138744"/><text x="7.2191%" y="879.50">[[heap]]</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (138,744 samples, 6.91%)</title><rect x="6.9691%" y="853" width="6.9140%" height="15" fill="rgb(225,111,53)" fg:x="139851" fg:w="138744"/><text x="7.2191%" y="863.50">&lt;alloc::v..</text></g><g><title>[ld-linux-x86-64.so.2] (375,870 samples, 18.73%)</title><rect x="13.8831%" y="869" width="18.7306%" height="15" fill="rgb(238,160,17)" fg:x="278595" fg:w="375870"/><text x="14.1331%" y="879.50">[ld-linux-x86-64.so.2]</text></g><g><title>[ld-linux-x86-64.so.2] (375,869 samples, 18.73%)</title><rect x="13.8832%" y="853" width="18.7305%" height="15" fill="rgb(214,148,48)" fg:x="278596" fg:w="375869"/><text x="14.1332%" y="863.50">[ld-linux-x86-64.so.2]</text></g><g><title>[ld-linux-x86-64.so.2] (361,778 samples, 18.03%)</title><rect x="14.5854%" y="837" width="18.0284%" height="15" fill="rgb(232,36,49)" fg:x="292687" fg:w="361778"/><text x="14.8354%" y="847.50">[ld-linux-x86-64.so.2]</text></g><g><title>[ld-linux-x86-64.so.2] (361,778 samples, 18.03%)</title><rect x="14.5854%" y="821" width="18.0284%" height="15" fill="rgb(209,103,24)" fg:x="292687" fg:w="361778"/><text x="14.8354%" y="831.50">[ld-linux-x86-64.so.2]</text></g><g><title>[ld-linux-x86-64.so.2] (312,869 samples, 15.59%)</title><rect x="17.0226%" y="805" width="15.5911%" height="15" fill="rgb(229,88,8)" fg:x="341596" fg:w="312869"/><text x="17.2726%" y="815.50">[ld-linux-x86-64.so.2]</text></g><g><title>[ld-linux-x86-64.so.2] (167,597 samples, 8.35%)</title><rect x="24.2619%" y="789" width="8.3518%" height="15" fill="rgb(213,181,19)" fg:x="486868" fg:w="167597"/><text x="24.5119%" y="799.50">[ld-linux-x8..</text></g><g><title>[ld-linux-x86-64.so.2] (118,444 samples, 5.90%)</title><rect x="26.7113%" y="773" width="5.9024%" height="15" fill="rgb(254,191,54)" fg:x="536021" fg:w="118444"/><text x="26.9613%" y="783.50">[ld-linu..</text></g><g><title>[ld-linux-x86-64.so.2] (70,320 samples, 3.50%)</title><rect x="29.1095%" y="757" width="3.5042%" height="15" fill="rgb(241,83,37)" fg:x="584145" fg:w="70320"/><text x="29.3595%" y="767.50">[ld..</text></g><g><title>[ld-linux-x86-64.so.2] (70,320 samples, 3.50%)</title><rect x="29.1095%" y="741" width="3.5042%" height="15" fill="rgb(233,36,39)" fg:x="584145" fg:w="70320"/><text x="29.3595%" y="751.50">[ld..</text></g><g><title>[unknown] (107,226 samples, 5.34%)</title><rect x="32.6137%" y="869" width="5.3434%" height="15" fill="rgb(226,3,54)" fg:x="654465" fg:w="107226"/><text x="32.8637%" y="879.50">[unknow..</text></g><g><title>&lt;pbscript::parser::expression::Expression as pbscript::parser::Parse&gt;::parse (185,998 samples, 9.27%)</title><rect x="37.9571%" y="549" width="9.2688%" height="15" fill="rgb(245,192,40)" fg:x="761691" fg:w="185998"/><text x="38.2071%" y="559.50">&lt;pbscript::pa..</text></g><g><title>pbscript::parser::expression::Expression::parse_single (185,998 samples, 9.27%)</title><rect x="37.9571%" y="533" width="9.2688%" height="15" fill="rgb(238,167,29)" fg:x="761691" fg:w="185998"/><text x="38.2071%" y="543.50">pbscript::par..</text></g><g><title>&lt;pbscript::parser::block::Block as pbscript::parser::Parse&gt;::parse (83,316 samples, 4.15%)</title><rect x="43.0740%" y="517" width="4.1519%" height="15" fill="rgb(232,182,51)" fg:x="864373" fg:w="83316"/><text x="43.3240%" y="527.50">&lt;pbsc..</text></g><g><title>&lt;pbscript::parser::statement::Statement as pbscript::parser::Parse&gt;::parse (83,316 samples, 4.15%)</title><rect x="43.0740%" y="501" width="4.1519%" height="15" fill="rgb(231,60,39)" fg:x="864373" fg:w="83316"/><text x="43.3240%" y="511.50">&lt;pbsc..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (83,316 samples, 4.15%)</title><rect x="43.0740%" y="485" width="4.1519%" height="15" fill="rgb(208,69,12)" fg:x="864373" fg:w="83316"/><text x="43.3240%" y="495.50">&lt;core..</text></g><g><title>&lt;pbscript::parser::program::Program as pbscript::parser::Parse&gt;::parse (263,402 samples, 13.13%)</title><rect x="37.9571%" y="581" width="13.1260%" height="15" fill="rgb(235,93,37)" fg:x="761691" fg:w="263402"/><text x="38.2071%" y="591.50">&lt;pbscript::parser::p..</text></g><g><title>&lt;pbscript::parser::statement::Statement as pbscript::parser::Parse&gt;::parse (263,402 samples, 13.13%)</title><rect x="37.9571%" y="565" width="13.1260%" height="15" fill="rgb(213,116,39)" fg:x="761691" fg:w="263402"/><text x="38.2071%" y="575.50">&lt;pbscript::parser::s..</text></g><g><title>pbscript::lexer::TokenStream::peek_nth_token (77,404 samples, 3.86%)</title><rect x="47.2258%" y="549" width="3.8572%" height="15" fill="rgb(222,207,29)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="559.50">pbsc..</text></g><g><title>pbscript::lexer::TokenStream::peek_nth (77,404 samples, 3.86%)</title><rect x="47.2258%" y="533" width="3.8572%" height="15" fill="rgb(206,96,30)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="543.50">pbsc..</text></g><g><title>pbscript::lexer::TokenStream::force_next (77,404 samples, 3.86%)</title><rect x="47.2258%" y="517" width="3.8572%" height="15" fill="rgb(218,138,4)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="527.50">pbsc..</text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;char&gt;&gt;::from (77,404 samples, 3.86%)</title><rect x="47.2258%" y="501" width="3.8572%" height="15" fill="rgb(250,191,14)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="511.50">&lt;all..</text></g><g><title>&lt;char as alloc::string::ToString&gt;::to_string (77,404 samples, 3.86%)</title><rect x="47.2258%" y="485" width="3.8572%" height="15" fill="rgb(239,60,40)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="495.50">&lt;cha..</text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;mut str&gt;&gt;::from (77,404 samples, 3.86%)</title><rect x="47.2258%" y="469" width="3.8572%" height="15" fill="rgb(206,27,48)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="479.50">&lt;all..</text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (77,404 samples, 3.86%)</title><rect x="47.2258%" y="453" width="3.8572%" height="15" fill="rgb(225,35,8)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="463.50">allo..</text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (77,404 samples, 3.86%)</title><rect x="47.2258%" y="437" width="3.8572%" height="15" fill="rgb(250,213,24)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="447.50">allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (77,404 samples, 3.86%)</title><rect x="47.2258%" y="421" width="3.8572%" height="15" fill="rgb(247,123,22)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="431.50">allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (77,404 samples, 3.86%)</title><rect x="47.2258%" y="405" width="3.8572%" height="15" fill="rgb(231,138,38)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="415.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (77,404 samples, 3.86%)</title><rect x="47.2258%" y="389" width="3.8572%" height="15" fill="rgb(231,145,46)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="399.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (77,404 samples, 3.86%)</title><rect x="47.2258%" y="373" width="3.8572%" height="15" fill="rgb(251,118,11)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="383.50">&lt;T a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (77,404 samples, 3.86%)</title><rect x="47.2258%" y="357" width="3.8572%" height="15" fill="rgb(217,147,25)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="367.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (77,404 samples, 3.86%)</title><rect x="47.2258%" y="341" width="3.8572%" height="15" fill="rgb(247,81,37)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="351.50">allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (77,404 samples, 3.86%)</title><rect x="47.2258%" y="325" width="3.8572%" height="15" fill="rgb(209,12,38)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="335.50">allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (77,404 samples, 3.86%)</title><rect x="47.2258%" y="309" width="3.8572%" height="15" fill="rgb(227,1,9)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="319.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77,404 samples, 3.86%)</title><rect x="47.2258%" y="293" width="3.8572%" height="15" fill="rgb(248,47,43)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="303.50">&lt;all..</text></g><g><title>alloc::alloc::Global::alloc_impl (77,404 samples, 3.86%)</title><rect x="47.2258%" y="277" width="3.8572%" height="15" fill="rgb(221,10,30)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="287.50">allo..</text></g><g><title>alloc::alloc::alloc (77,404 samples, 3.86%)</title><rect x="47.2258%" y="261" width="3.8572%" height="15" fill="rgb(210,229,1)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="271.50">allo..</text></g><g><title>malloc (77,404 samples, 3.86%)</title><rect x="47.2258%" y="245" width="3.8572%" height="15" fill="rgb(222,148,37)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="255.50">mall..</text></g><g><title>[libc.so.6] (77,404 samples, 3.86%)</title><rect x="47.2258%" y="229" width="3.8572%" height="15" fill="rgb(234,67,33)" fg:x="947689" fg:w="77404"/><text x="47.4758%" y="239.50">[lib..</text></g><g><title>pbscript::compiler::expression::compile_expression (105,770 samples, 5.27%)</title><rect x="51.0831%" y="549" width="5.2708%" height="15" fill="rgb(247,98,35)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="559.50">pbscri..</text></g><g><title>pbscript::compiler::expression::compile_block (105,770 samples, 5.27%)</title><rect x="51.0831%" y="533" width="5.2708%" height="15" fill="rgb(247,138,52)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="543.50">pbscri..</text></g><g><title>pbscript::compiler::statement::compile_statement (105,770 samples, 5.27%)</title><rect x="51.0831%" y="517" width="5.2708%" height="15" fill="rgb(213,79,30)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="527.50">pbscri..</text></g><g><title>pbscript::compiler::statement::compile_fn (105,770 samples, 5.27%)</title><rect x="51.0831%" y="501" width="5.2708%" height="15" fill="rgb(246,177,23)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="511.50">pbscri..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (105,770 samples, 5.27%)</title><rect x="51.0831%" y="485" width="5.2708%" height="15" fill="rgb(230,62,27)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="495.50">core::..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (105,770 samples, 5.27%)</title><rect x="51.0831%" y="469" width="5.2708%" height="15" fill="rgb(216,154,8)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="479.50">&lt;core:..</text></g><g><title>core::iter::adapters::try_process (105,770 samples, 5.27%)</title><rect x="51.0831%" y="453" width="5.2708%" height="15" fill="rgb(244,35,45)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="463.50">core::..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (105,770 samples, 5.27%)</title><rect x="51.0831%" y="437" width="5.2708%" height="15" fill="rgb(251,115,12)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="447.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (105,770 samples, 5.27%)</title><rect x="51.0831%" y="421" width="5.2708%" height="15" fill="rgb(240,54,50)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="431.50">core::..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (105,770 samples, 5.27%)</title><rect x="51.0831%" y="405" width="5.2708%" height="15" fill="rgb(233,84,52)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="415.50">&lt;hashb..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (105,770 samples, 5.27%)</title><rect x="51.0831%" y="389" width="5.2708%" height="15" fill="rgb(207,117,47)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="399.50">core::..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::fold (105,770 samples, 5.27%)</title><rect x="51.0831%" y="373" width="5.2708%" height="15" fill="rgb(249,43,39)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="383.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (105,770 samples, 5.27%)</title><rect x="51.0831%" y="357" width="5.2708%" height="15" fill="rgb(209,38,44)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="367.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (105,770 samples, 5.27%)</title><rect x="51.0831%" y="341" width="5.2708%" height="15" fill="rgb(236,212,23)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="351.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (105,770 samples, 5.27%)</title><rect x="51.0831%" y="325" width="5.2708%" height="15" fill="rgb(242,79,21)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="335.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (105,770 samples, 5.27%)</title><rect x="51.0831%" y="309" width="5.2708%" height="15" fill="rgb(211,96,35)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="319.50">core::..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (105,770 samples, 5.27%)</title><rect x="51.0831%" y="293" width="5.2708%" height="15" fill="rgb(253,215,40)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="303.50">&lt;core:..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (105,770 samples, 5.27%)</title><rect x="51.0831%" y="277" width="5.2708%" height="15" fill="rgb(211,81,21)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="287.50">core::..</text></g><g><title>pbscript::compiler::statement::compile_fn::_{{closure}} (105,770 samples, 5.27%)</title><rect x="51.0831%" y="261" width="5.2708%" height="15" fill="rgb(208,190,38)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="271.50">pbscri..</text></g><g><title>pbscript::compiler::ty::compile_ty (105,770 samples, 5.27%)</title><rect x="51.0831%" y="245" width="5.2708%" height="15" fill="rgb(235,213,38)" fg:x="1025093" fg:w="105770"/><text x="51.3331%" y="255.50">pbscri..</text></g><g><title>pbscript::compiler::compile (230,076 samples, 11.47%)</title><rect x="51.0831%" y="581" width="11.4653%" height="15" fill="rgb(237,122,38)" fg:x="1025093" fg:w="230076"/><text x="51.3331%" y="591.50">pbscript::compile..</text></g><g><title>pbscript::compiler::statement::compile_statement (230,076 samples, 11.47%)</title><rect x="51.0831%" y="565" width="11.4653%" height="15" fill="rgb(244,218,35)" fg:x="1025093" fg:w="230076"/><text x="51.3331%" y="575.50">pbscript::compile..</text></g><g><title>pbscript_lib::instruction::InstructionSet::push (124,306 samples, 6.19%)</title><rect x="56.3539%" y="549" width="6.1945%" height="15" fill="rgb(240,68,47)" fg:x="1130863" fg:w="124306"/><text x="56.6039%" y="559.50">pbscript..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (124,306 samples, 6.19%)</title><rect x="56.3539%" y="533" width="6.1945%" height="15" fill="rgb(210,16,53)" fg:x="1130863" fg:w="124306"/><text x="56.6039%" y="543.50">alloc::v..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (124,306 samples, 6.19%)</title><rect x="56.3539%" y="517" width="6.1945%" height="15" fill="rgb(235,124,12)" fg:x="1130863" fg:w="124306"/><text x="56.6039%" y="527.50">alloc::r..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (124,306 samples, 6.19%)</title><rect x="56.3539%" y="501" width="6.1945%" height="15" fill="rgb(224,169,11)" fg:x="1130863" fg:w="124306"/><text x="56.6039%" y="511.50">alloc::r..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (124,306 samples, 6.19%)</title><rect x="56.3539%" y="485" width="6.1945%" height="15" fill="rgb(250,166,2)" fg:x="1130863" fg:w="124306"/><text x="56.6039%" y="495.50">alloc::r..</text></g><g><title>alloc::raw_vec::finish_grow (124,306 samples, 6.19%)</title><rect x="56.3539%" y="469" width="6.1945%" height="15" fill="rgb(242,216,29)" fg:x="1130863" fg:w="124306"/><text x="56.6039%" y="479.50">alloc::r..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (124,306 samples, 6.19%)</title><rect x="56.3539%" y="453" width="6.1945%" height="15" fill="rgb(230,116,27)" fg:x="1130863" fg:w="124306"/><text x="56.6039%" y="463.50">&lt;alloc::..</text></g><g><title>alloc::alloc::Global::grow_impl (124,306 samples, 6.19%)</title><rect x="56.3539%" y="437" width="6.1945%" height="15" fill="rgb(228,99,48)" fg:x="1130863" fg:w="124306"/><text x="56.6039%" y="447.50">alloc::a..</text></g><g><title>alloc::alloc::realloc (124,306 samples, 6.19%)</title><rect x="56.3539%" y="421" width="6.1945%" height="15" fill="rgb(253,11,6)" fg:x="1130863" fg:w="124306"/><text x="56.6039%" y="431.50">alloc::a..</text></g><g><title>realloc (124,306 samples, 6.19%)</title><rect x="56.3539%" y="405" width="6.1945%" height="15" fill="rgb(247,143,39)" fg:x="1130863" fg:w="124306"/><text x="56.6039%" y="415.50">realloc</text></g><g><title>[libc.so.6] (124,306 samples, 6.19%)</title><rect x="56.3539%" y="389" width="6.1945%" height="15" fill="rgb(236,97,10)" fg:x="1130863" fg:w="124306"/><text x="56.6039%" y="399.50">[libc.so..</text></g><g><title>[libc.so.6] (124,306 samples, 6.19%)</title><rect x="56.3539%" y="373" width="6.1945%" height="15" fill="rgb(233,208,19)" fg:x="1130863" fg:w="124306"/><text x="56.6039%" y="383.50">[libc.so..</text></g><g><title>[libc.so.6] (124,306 samples, 6.19%)</title><rect x="56.3539%" y="357" width="6.1945%" height="15" fill="rgb(216,164,2)" fg:x="1130863" fg:w="124306"/><text x="56.6039%" y="367.50">[libc.so..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;pbscript::interpreter::State&gt;&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="469" width="7.5128%" height="15" fill="rgb(220,129,5)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="479.50">core::ptr:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (150,760 samples, 7.51%)</title><rect x="62.5484%" y="453" width="7.5128%" height="15" fill="rgb(242,17,10)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="463.50">&lt;alloc::rc..</text></g><g><title>core::ptr::drop_in_place&lt;pbscript::interpreter::State&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="437" width="7.5128%" height="15" fill="rgb(242,107,0)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="447.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;pbscript::interpreter::State&gt;&gt;&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="421" width="7.5128%" height="15" fill="rgb(251,28,31)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="431.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;pbscript::interpreter::State&gt;&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="405" width="7.5128%" height="15" fill="rgb(233,223,10)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="415.50">core::ptr:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (150,760 samples, 7.51%)</title><rect x="62.5484%" y="389" width="7.5128%" height="15" fill="rgb(215,21,27)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="399.50">&lt;alloc::rc..</text></g><g><title>core::ptr::drop_in_place&lt;pbscript::interpreter::State&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="373" width="7.5128%" height="15" fill="rgb(232,23,21)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="383.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;pbscript_lib::value::Value&gt;&gt;&gt;&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="357" width="7.5128%" height="15" fill="rgb(244,5,23)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="367.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (150,760 samples, 7.51%)</title><rect x="62.5484%" y="341" width="7.5128%" height="15" fill="rgb(226,81,46)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="351.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::rc::Rc&lt;core::cell::RefCell&lt;pbscript_lib::value::Value&gt;&gt;]&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="325" width="7.5128%" height="15" fill="rgb(247,70,30)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="335.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;pbscript_lib::value::Value&gt;&gt;&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="309" width="7.5128%" height="15" fill="rgb(212,68,19)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="319.50">core::ptr:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (150,760 samples, 7.51%)</title><rect x="62.5484%" y="293" width="7.5128%" height="15" fill="rgb(240,187,13)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="303.50">&lt;alloc::rc..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;pbscript_lib::value::Value&gt;&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="277" width="7.5128%" height="15" fill="rgb(223,113,26)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="287.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;pbscript_lib::value::Value&gt;&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="261" width="7.5128%" height="15" fill="rgb(206,192,2)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="271.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;pbscript_lib::value::Value&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="245" width="7.5128%" height="15" fill="rgb(241,108,4)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="255.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;dyn pbscript_lib::value::Call&gt;&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="229" width="7.5128%" height="15" fill="rgb(247,173,49)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="239.50">core::ptr:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (150,760 samples, 7.51%)</title><rect x="62.5484%" y="213" width="7.5128%" height="15" fill="rgb(224,114,35)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="223.50">&lt;alloc::rc..</text></g><g><title>core::ptr::drop_in_place&lt;dyn pbscript_lib::value::Call&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="197" width="7.5128%" height="15" fill="rgb(245,159,27)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="207.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;pbscript::interpreter::function::PbFunction&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="181" width="7.5128%" height="15" fill="rgb(245,172,44)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="191.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;pbscript_lib::instruction::Reporter&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="165" width="7.5128%" height="15" fill="rgb(236,23,11)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="175.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;pbscript_lib::instruction::Reporter&gt;&gt;&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="149" width="7.5128%" height="15" fill="rgb(205,117,38)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="159.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;pbscript_lib::instruction::Reporter&gt;&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="133" width="7.5128%" height="15" fill="rgb(237,72,25)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="143.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;pbscript_lib::instruction::Reporter&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="117" width="7.5128%" height="15" fill="rgb(244,70,9)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="127.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;pbscript_lib::instruction::Reporter&gt;&gt; (150,760 samples, 7.51%)</title><rect x="62.5484%" y="101" width="7.5128%" height="15" fill="rgb(217,125,39)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="111.50">core::ptr:..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (150,760 samples, 7.51%)</title><rect x="62.5484%" y="85" width="7.5128%" height="15" fill="rgb(235,36,10)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="95.50">&lt;alloc::bo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (150,760 samples, 7.51%)</title><rect x="62.5484%" y="69" width="7.5128%" height="15" fill="rgb(251,123,47)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="79.50">&lt;alloc::al..</text></g><g><title>alloc::alloc::dealloc (150,760 samples, 7.51%)</title><rect x="62.5484%" y="53" width="7.5128%" height="15" fill="rgb(221,13,13)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="63.50">alloc::all..</text></g><g><title>cfree (150,760 samples, 7.51%)</title><rect x="62.5484%" y="37" width="7.5128%" height="15" fill="rgb(238,131,9)" fg:x="1255169" fg:w="150760"/><text x="62.7984%" y="47.50">cfree</text></g><g><title>pbscript::interpret (799,346 samples, 39.83%)</title><rect x="37.9571%" y="597" width="39.8335%" height="15" fill="rgb(211,50,8)" fg:x="761691" fg:w="799346"/><text x="38.2071%" y="607.50">pbscript::interpret</text></g><g><title>pbscript::interpreter::evaluate (305,868 samples, 15.24%)</title><rect x="62.5484%" y="581" width="15.2422%" height="15" fill="rgb(245,182,24)" fg:x="1255169" fg:w="305868"/><text x="62.7984%" y="591.50">pbscript::interpreter::..</text></g><g><title>pbscript::interpreter::evaluate_state (305,868 samples, 15.24%)</title><rect x="62.5484%" y="565" width="15.2422%" height="15" fill="rgb(242,14,37)" fg:x="1255169" fg:w="305868"/><text x="62.7984%" y="575.50">pbscript::interpreter::..</text></g><g><title>pbscript::interpreter::evaluate_reporter (305,868 samples, 15.24%)</title><rect x="62.5484%" y="549" width="15.2422%" height="15" fill="rgb(246,228,12)" fg:x="1255169" fg:w="305868"/><text x="62.7984%" y="559.50">pbscript::interpreter::..</text></g><g><title>pbscript::interpreter::evaluate_state (305,868 samples, 15.24%)</title><rect x="62.5484%" y="533" width="15.2422%" height="15" fill="rgb(213,55,15)" fg:x="1255169" fg:w="305868"/><text x="62.7984%" y="543.50">pbscript::interpreter::..</text></g><g><title>pbscript::interpreter::evaluate_reporter (305,868 samples, 15.24%)</title><rect x="62.5484%" y="517" width="15.2422%" height="15" fill="rgb(209,9,3)" fg:x="1255169" fg:w="305868"/><text x="62.7984%" y="527.50">pbscript::interpreter::..</text></g><g><title>&lt;pbscript::interpreter::function::PbFunction as pbscript_lib::value::Call&gt;::call (305,868 samples, 15.24%)</title><rect x="62.5484%" y="501" width="15.2422%" height="15" fill="rgb(230,59,30)" fg:x="1255169" fg:w="305868"/><text x="62.7984%" y="511.50">&lt;pbscript::interpreter:..</text></g><g><title>pbscript::interpreter::evaluate_reporter (305,868 samples, 15.24%)</title><rect x="62.5484%" y="485" width="15.2422%" height="15" fill="rgb(209,121,21)" fg:x="1255169" fg:w="305868"/><text x="62.7984%" y="495.50">pbscript::interpreter::..</text></g><g><title>pbscript::interpreter::evaluate_state (155,108 samples, 7.73%)</title><rect x="70.0611%" y="469" width="7.7294%" height="15" fill="rgb(220,109,13)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="479.50">pbscript::i..</text></g><g><title>pbscript::interpreter::evaluate_reporter (155,108 samples, 7.73%)</title><rect x="70.0611%" y="453" width="7.7294%" height="15" fill="rgb(232,18,1)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="463.50">pbscript::i..</text></g><g><title>&lt;pbscript::interpreter::function::PbFunction as pbscript_lib::value::Call&gt;::call (155,108 samples, 7.73%)</title><rect x="70.0611%" y="437" width="7.7294%" height="15" fill="rgb(215,41,42)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="447.50">&lt;pbscript::..</text></g><g><title>pbscript::interpreter::evaluate_reporter (155,108 samples, 7.73%)</title><rect x="70.0611%" y="421" width="7.7294%" height="15" fill="rgb(224,123,36)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="431.50">pbscript::i..</text></g><g><title>pbscript::interpreter::evaluate_reporter (155,108 samples, 7.73%)</title><rect x="70.0611%" y="405" width="7.7294%" height="15" fill="rgb(240,125,3)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="415.50">pbscript::i..</text></g><g><title>&lt;pbscript_lib::value::function::FFIWrapper&lt;T,(R,P0)&gt; as pbscript_lib::value::Call&gt;::call (155,108 samples, 7.73%)</title><rect x="70.0611%" y="389" width="7.7294%" height="15" fill="rgb(205,98,50)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="399.50">&lt;pbscript_l..</text></g><g><title>core::ops::function::Fn::call (155,108 samples, 7.73%)</title><rect x="70.0611%" y="373" width="7.7294%" height="15" fill="rgb(205,185,37)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="383.50">core::ops::..</text></g><g><title>pbscript::std_library::prelude::println (155,108 samples, 7.73%)</title><rect x="70.0611%" y="357" width="7.7294%" height="15" fill="rgb(238,207,15)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="367.50">pbscript::s..</text></g><g><title>std::io::stdio::_print (155,108 samples, 7.73%)</title><rect x="70.0611%" y="341" width="7.7294%" height="15" fill="rgb(213,199,42)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="351.50">std::io::st..</text></g><g><title>std::io::stdio::print_to (155,108 samples, 7.73%)</title><rect x="70.0611%" y="325" width="7.7294%" height="15" fill="rgb(235,201,11)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="335.50">std::io::st..</text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (155,108 samples, 7.73%)</title><rect x="70.0611%" y="309" width="7.7294%" height="15" fill="rgb(207,46,11)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="319.50">&lt;std::io::s..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (155,108 samples, 7.73%)</title><rect x="70.0611%" y="293" width="7.7294%" height="15" fill="rgb(241,35,35)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="303.50">&lt;&amp;std::io::..</text></g><g><title>std::io::Write::write_fmt (155,108 samples, 7.73%)</title><rect x="70.0611%" y="277" width="7.7294%" height="15" fill="rgb(243,32,47)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="287.50">std::io::Wr..</text></g><g><title>core::fmt::write (155,108 samples, 7.73%)</title><rect x="70.0611%" y="261" width="7.7294%" height="15" fill="rgb(247,202,23)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="271.50">core::fmt::..</text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (155,108 samples, 7.73%)</title><rect x="70.0611%" y="245" width="7.7294%" height="15" fill="rgb(219,102,11)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="255.50">&lt;std::io::W..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (155,108 samples, 7.73%)</title><rect x="70.0611%" y="229" width="7.7294%" height="15" fill="rgb(243,110,44)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="239.50">&lt;std::io::s..</text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (155,108 samples, 7.73%)</title><rect x="70.0611%" y="213" width="7.7294%" height="15" fill="rgb(222,74,54)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="223.50">&lt;std::io::b..</text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (155,108 samples, 7.73%)</title><rect x="70.0611%" y="197" width="7.7294%" height="15" fill="rgb(216,99,12)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="207.50">&lt;std::io::b..</text></g><g><title>core::slice::memchr::memrchr (155,108 samples, 7.73%)</title><rect x="70.0611%" y="181" width="7.7294%" height="15" fill="rgb(226,22,26)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="191.50">core::slice..</text></g><g><title>core::slice::&lt;impl [T]&gt;::align_to (155,108 samples, 7.73%)</title><rect x="70.0611%" y="165" width="7.7294%" height="15" fill="rgb(217,163,10)" fg:x="1405929" fg:w="155108"/><text x="70.3111%" y="175.50">core::slice..</text></g><g><title>std::panic::catch_unwind (872,043 samples, 43.46%)</title><rect x="37.9571%" y="725" width="43.4562%" height="15" fill="rgb(213,25,53)" fg:x="761691" fg:w="872043"/><text x="38.2071%" y="735.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (872,043 samples, 43.46%)</title><rect x="37.9571%" y="709" width="43.4562%" height="15" fill="rgb(252,105,26)" fg:x="761691" fg:w="872043"/><text x="38.2071%" y="719.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (872,043 samples, 43.46%)</title><rect x="37.9571%" y="693" width="43.4562%" height="15" fill="rgb(220,39,43)" fg:x="761691" fg:w="872043"/><text x="38.2071%" y="703.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (872,043 samples, 43.46%)</title><rect x="37.9571%" y="677" width="43.4562%" height="15" fill="rgb(229,68,48)" fg:x="761691" fg:w="872043"/><text x="38.2071%" y="687.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F..</text></g><g><title>std::rt::lang_start::_{{closure}} (872,043 samples, 43.46%)</title><rect x="37.9571%" y="661" width="43.4562%" height="15" fill="rgb(252,8,32)" fg:x="761691" fg:w="872043"/><text x="38.2071%" y="671.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (872,043 samples, 43.46%)</title><rect x="37.9571%" y="645" width="43.4562%" height="15" fill="rgb(223,20,43)" fg:x="761691" fg:w="872043"/><text x="38.2071%" y="655.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (872,043 samples, 43.46%)</title><rect x="37.9571%" y="629" width="43.4562%" height="15" fill="rgb(229,81,49)" fg:x="761691" fg:w="872043"/><text x="38.2071%" y="639.50">core::ops::function::FnOnce::call_once</text></g><g><title>pbscript::main (872,043 samples, 43.46%)</title><rect x="37.9571%" y="613" width="43.4562%" height="15" fill="rgb(236,28,36)" fg:x="761691" fg:w="872043"/><text x="38.2071%" y="623.50">pbscript::main</text></g><g><title>std::fs::read_to_string (72,697 samples, 3.62%)</title><rect x="77.7906%" y="597" width="3.6227%" height="15" fill="rgb(249,185,26)" fg:x="1561037" fg:w="72697"/><text x="78.0406%" y="607.50">std:..</text></g><g><title>std::fs::read_to_string::inner (72,697 samples, 3.62%)</title><rect x="77.7906%" y="581" width="3.6227%" height="15" fill="rgb(249,174,33)" fg:x="1561037" fg:w="72697"/><text x="78.0406%" y="591.50">std:..</text></g><g><title>std::io::default_read_to_string (72,697 samples, 3.62%)</title><rect x="77.7906%" y="565" width="3.6227%" height="15" fill="rgb(233,201,37)" fg:x="1561037" fg:w="72697"/><text x="78.0406%" y="575.50">std:..</text></g><g><title>std::io::append_to_string (72,697 samples, 3.62%)</title><rect x="77.7906%" y="549" width="3.6227%" height="15" fill="rgb(221,78,26)" fg:x="1561037" fg:w="72697"/><text x="78.0406%" y="559.50">std:..</text></g><g><title>core::str::converts::from_utf8 (72,697 samples, 3.62%)</title><rect x="77.7906%" y="533" width="3.6227%" height="15" fill="rgb(250,127,30)" fg:x="1561037" fg:w="72697"/><text x="78.0406%" y="543.50">core..</text></g><g><title>core::str::validations::run_utf8_validation (72,697 samples, 3.62%)</title><rect x="77.7906%" y="517" width="3.6227%" height="15" fill="rgb(230,49,44)" fg:x="1561037" fg:w="72697"/><text x="78.0406%" y="527.50">core..</text></g><g><title>_start (948,130 samples, 47.25%)</title><rect x="37.9571%" y="869" width="47.2478%" height="15" fill="rgb(229,67,23)" fg:x="761691" fg:w="948130"/><text x="38.2071%" y="879.50">_start</text></g><g><title>__libc_start_main (948,130 samples, 47.25%)</title><rect x="37.9571%" y="853" width="47.2478%" height="15" fill="rgb(249,83,47)" fg:x="761691" fg:w="948130"/><text x="38.2071%" y="863.50">__libc_start_main</text></g><g><title>[libc.so.6] (948,130 samples, 47.25%)</title><rect x="37.9571%" y="837" width="47.2478%" height="15" fill="rgb(215,43,3)" fg:x="761691" fg:w="948130"/><text x="38.2071%" y="847.50">[libc.so.6]</text></g><g><title>main (948,130 samples, 47.25%)</title><rect x="37.9571%" y="821" width="47.2478%" height="15" fill="rgb(238,154,13)" fg:x="761691" fg:w="948130"/><text x="38.2071%" y="831.50">main</text></g><g><title>std::rt::lang_start_internal (948,130 samples, 47.25%)</title><rect x="37.9571%" y="805" width="47.2478%" height="15" fill="rgb(219,56,2)" fg:x="761691" fg:w="948130"/><text x="38.2071%" y="815.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (948,130 samples, 47.25%)</title><rect x="37.9571%" y="789" width="47.2478%" height="15" fill="rgb(233,0,4)" fg:x="761691" fg:w="948130"/><text x="38.2071%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (948,130 samples, 47.25%)</title><rect x="37.9571%" y="773" width="47.2478%" height="15" fill="rgb(235,30,7)" fg:x="761691" fg:w="948130"/><text x="38.2071%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (948,130 samples, 47.25%)</title><rect x="37.9571%" y="757" width="47.2478%" height="15" fill="rgb(250,79,13)" fg:x="761691" fg:w="948130"/><text x="38.2071%" y="767.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (948,130 samples, 47.25%)</title><rect x="37.9571%" y="741" width="47.2478%" height="15" fill="rgb(211,146,34)" fg:x="761691" fg:w="948130"/><text x="38.2071%" y="751.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::rt::init (76,087 samples, 3.79%)</title><rect x="81.4133%" y="725" width="3.7916%" height="15" fill="rgb(228,22,38)" fg:x="1633734" fg:w="76087"/><text x="81.6633%" y="735.50">std:..</text></g><g><title>std::sys::pal::unix::init (76,087 samples, 3.79%)</title><rect x="81.4133%" y="709" width="3.7916%" height="15" fill="rgb(235,168,5)" fg:x="1633734" fg:w="76087"/><text x="81.6633%" y="719.50">std:..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::init (76,087 samples, 3.79%)</title><rect x="81.4133%" y="693" width="3.7916%" height="15" fill="rgb(221,155,16)" fg:x="1633734" fg:w="76087"/><text x="81.6633%" y="703.50">std:..</text></g><g><title>std::sys::pal::unix::os::page_size (76,087 samples, 3.79%)</title><rect x="81.4133%" y="677" width="3.7916%" height="15" fill="rgb(215,215,53)" fg:x="1633734" fg:w="76087"/><text x="81.6633%" y="687.50">std:..</text></g><g><title>__sysconf (76,087 samples, 3.79%)</title><rect x="81.4133%" y="661" width="3.7916%" height="15" fill="rgb(223,4,10)" fg:x="1633734" fg:w="76087"/><text x="81.6633%" y="671.50">__sy..</text></g><g><title>pbscript::compiler::expression::compile_expression (110,723 samples, 5.52%)</title><rect x="85.2049%" y="869" width="5.5176%" height="15" fill="rgb(234,103,6)" fg:x="1709821" fg:w="110723"/><text x="85.4549%" y="879.50">pbscrip..</text></g><g><title>pbscript::compiler::expression::compile_block (110,723 samples, 5.52%)</title><rect x="85.2049%" y="853" width="5.5176%" height="15" fill="rgb(227,97,0)" fg:x="1709821" fg:w="110723"/><text x="85.4549%" y="863.50">pbscrip..</text></g><g><title>pbscript::compiler::statement::compile_statement (110,723 samples, 5.52%)</title><rect x="85.2049%" y="837" width="5.5176%" height="15" fill="rgb(234,150,53)" fg:x="1709821" fg:w="110723"/><text x="85.4549%" y="847.50">pbscrip..</text></g><g><title>pbscript::compiler::expression::compile_expression (110,723 samples, 5.52%)</title><rect x="85.2049%" y="821" width="5.5176%" height="15" fill="rgb(228,201,54)" fg:x="1709821" fg:w="110723"/><text x="85.4549%" y="831.50">pbscrip..</text></g><g><title>pbscript::compiler::expression::compile_expression (110,723 samples, 5.52%)</title><rect x="85.2049%" y="805" width="5.5176%" height="15" fill="rgb(222,22,37)" fg:x="1709821" fg:w="110723"/><text x="85.4549%" y="815.50">pbscrip..</text></g><g><title>pbscript::compiler::statement::compile_fn (110,723 samples, 5.52%)</title><rect x="85.2049%" y="789" width="5.5176%" height="15" fill="rgb(237,53,32)" fg:x="1709821" fg:w="110723"/><text x="85.4549%" y="799.50">pbscrip..</text></g><g><title>pbscript::compiler::expression::compile_expression (110,723 samples, 5.52%)</title><rect x="85.2049%" y="773" width="5.5176%" height="15" fill="rgb(233,25,53)" fg:x="1709821" fg:w="110723"/><text x="85.4549%" y="783.50">pbscrip..</text></g><g><title>pbscript::compiler::expression::compile_block (110,723 samples, 5.52%)</title><rect x="85.2049%" y="757" width="5.5176%" height="15" fill="rgb(210,40,34)" fg:x="1709821" fg:w="110723"/><text x="85.4549%" y="767.50">pbscrip..</text></g><g><title>pbscript::compiler::statement::compile_statement (110,723 samples, 5.52%)</title><rect x="85.2049%" y="741" width="5.5176%" height="15" fill="rgb(241,220,44)" fg:x="1709821" fg:w="110723"/><text x="85.4549%" y="751.50">pbscrip..</text></g><g><title>pbscript_lib::instruction::InstructionSet::push (110,723 samples, 5.52%)</title><rect x="85.2049%" y="725" width="5.5176%" height="15" fill="rgb(235,28,35)" fg:x="1709821" fg:w="110723"/><text x="85.4549%" y="735.50">pbscrip..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (110,723 samples, 5.52%)</title><rect x="85.2049%" y="709" width="5.5176%" height="15" fill="rgb(210,56,17)" fg:x="1709821" fg:w="110723"/><text x="85.4549%" y="719.50">alloc::..</text></g><g><title>core::ptr::write (110,723 samples, 5.52%)</title><rect x="85.2049%" y="693" width="5.5176%" height="15" fill="rgb(224,130,29)" fg:x="1709821" fg:w="110723"/><text x="85.4549%" y="703.50">core::p..</text></g><g><title>[libc.so.6] (110,723 samples, 5.52%)</title><rect x="85.2049%" y="677" width="5.5176%" height="15" fill="rgb(235,212,8)" fg:x="1709821" fg:w="110723"/><text x="85.4549%" y="687.50">[libc.s..</text></g><g><title>&lt;pbscript::parser::block::Block as pbscript::parser::Parse&gt;::parse (90,305 samples, 4.50%)</title><rect x="90.7225%" y="853" width="4.5001%" height="15" fill="rgb(223,33,50)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="863.50">&lt;pbsc..</text></g><g><title>&lt;pbscript::parser::statement::Statement as pbscript::parser::Parse&gt;::parse (90,305 samples, 4.50%)</title><rect x="90.7225%" y="837" width="4.5001%" height="15" fill="rgb(219,149,13)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="847.50">&lt;pbsc..</text></g><g><title>pbscript::parser::statement::Statement::parse_def_function (90,305 samples, 4.50%)</title><rect x="90.7225%" y="821" width="4.5001%" height="15" fill="rgb(250,156,29)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="831.50">pbscr..</text></g><g><title>&lt;pbscript::parser::expression::Expression as pbscript::parser::Parse&gt;::parse (90,305 samples, 4.50%)</title><rect x="90.7225%" y="805" width="4.5001%" height="15" fill="rgb(216,193,19)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="815.50">&lt;pbsc..</text></g><g><title>pbscript::parser::expression::Expression::parse_single (90,305 samples, 4.50%)</title><rect x="90.7225%" y="789" width="4.5001%" height="15" fill="rgb(216,135,14)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="799.50">pbscr..</text></g><g><title>&lt;pbscript::parser::block::Block as pbscript::parser::Parse&gt;::parse (90,305 samples, 4.50%)</title><rect x="90.7225%" y="773" width="4.5001%" height="15" fill="rgb(241,47,5)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="783.50">&lt;pbsc..</text></g><g><title>&lt;pbscript::parser::statement::Statement as pbscript::parser::Parse&gt;::parse (90,305 samples, 4.50%)</title><rect x="90.7225%" y="757" width="4.5001%" height="15" fill="rgb(233,42,35)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="767.50">&lt;pbsc..</text></g><g><title>&lt;pbscript::parser::expression::Expression as pbscript::parser::Parse&gt;::parse (90,305 samples, 4.50%)</title><rect x="90.7225%" y="741" width="4.5001%" height="15" fill="rgb(231,13,6)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="751.50">&lt;pbsc..</text></g><g><title>pbscript::parser::expression::Expression::parse_single (90,305 samples, 4.50%)</title><rect x="90.7225%" y="725" width="4.5001%" height="15" fill="rgb(207,181,40)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="735.50">pbscr..</text></g><g><title>pbscript_lib::span::Chunk&lt;T&gt;::as_box (90,305 samples, 4.50%)</title><rect x="90.7225%" y="709" width="4.5001%" height="15" fill="rgb(254,173,49)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="719.50">pbscr..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (90,305 samples, 4.50%)</title><rect x="90.7225%" y="693" width="4.5001%" height="15" fill="rgb(221,1,38)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="703.50">alloc..</text></g><g><title>alloc::alloc::exchange_malloc (90,305 samples, 4.50%)</title><rect x="90.7225%" y="677" width="4.5001%" height="15" fill="rgb(206,124,46)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="687.50">alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (90,305 samples, 4.50%)</title><rect x="90.7225%" y="661" width="4.5001%" height="15" fill="rgb(249,21,11)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="671.50">&lt;allo..</text></g><g><title>alloc::alloc::Global::alloc_impl (90,305 samples, 4.50%)</title><rect x="90.7225%" y="645" width="4.5001%" height="15" fill="rgb(222,201,40)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="655.50">alloc..</text></g><g><title>alloc::alloc::alloc (90,305 samples, 4.50%)</title><rect x="90.7225%" y="629" width="4.5001%" height="15" fill="rgb(235,61,29)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="639.50">alloc..</text></g><g><title>malloc (90,305 samples, 4.50%)</title><rect x="90.7225%" y="613" width="4.5001%" height="15" fill="rgb(219,207,3)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="623.50">malloc</text></g><g><title>[libc.so.6] (90,305 samples, 4.50%)</title><rect x="90.7225%" y="597" width="4.5001%" height="15" fill="rgb(222,56,46)" fg:x="1820544" fg:w="90305"/><text x="90.9725%" y="607.50">[libc..</text></g><g><title>all (2,006,717 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(239,76,54)" fg:x="0" fg:w="2006717"/><text x="0.2500%" y="911.50"></text></g><g><title>pbscript (2,006,717 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(231,124,27)" fg:x="0" fg:w="2006717"/><text x="0.2500%" y="895.50">pbscript</text></g><g><title>pbscript::parser::expression::Expression::parse_single (186,173 samples, 9.28%)</title><rect x="90.7225%" y="869" width="9.2775%" height="15" fill="rgb(249,195,6)" fg:x="1820544" fg:w="186173"/><text x="90.9725%" y="879.50">pbscript::par..</text></g><g><title>pbscript::parser::expression::Expression::parse_function_call (95,868 samples, 4.78%)</title><rect x="95.2226%" y="853" width="4.7774%" height="15" fill="rgb(237,174,47)" fg:x="1910849" fg:w="95868"/><text x="95.4726%" y="863.50">pbscri..</text></g><g><title>&lt;pbscript::parser::expression::Expression as pbscript::parser::Parse&gt;::parse (95,868 samples, 4.78%)</title><rect x="95.2226%" y="837" width="4.7774%" height="15" fill="rgb(206,201,31)" fg:x="1910849" fg:w="95868"/><text x="95.4726%" y="847.50">&lt;pbscr..</text></g><g><title>pbscript::parser::expression::Expression::parse_single (95,868 samples, 4.78%)</title><rect x="95.2226%" y="821" width="4.7774%" height="15" fill="rgb(231,57,52)" fg:x="1910849" fg:w="95868"/><text x="95.4726%" y="831.50">pbscri..</text></g><g><title>pbscript::parser::expression::Expression::parse_lambda (95,868 samples, 4.78%)</title><rect x="95.2226%" y="805" width="4.7774%" height="15" fill="rgb(248,177,22)" fg:x="1910849" fg:w="95868"/><text x="95.4726%" y="815.50">pbscri..</text></g><g><title>&lt;pbscript::parser::expression::Expression as pbscript::parser::Parse&gt;::parse (95,868 samples, 4.78%)</title><rect x="95.2226%" y="789" width="4.7774%" height="15" fill="rgb(215,211,37)" fg:x="1910849" fg:w="95868"/><text x="95.4726%" y="799.50">&lt;pbscr..</text></g><g><title>pbscript::parser::expression::Expression::parse_single (95,868 samples, 4.78%)</title><rect x="95.2226%" y="773" width="4.7774%" height="15" fill="rgb(241,128,51)" fg:x="1910849" fg:w="95868"/><text x="95.4726%" y="783.50">pbscri..</text></g><g><title>&lt;pbscript::parser::block::Block as pbscript::parser::Parse&gt;::parse (95,868 samples, 4.78%)</title><rect x="95.2226%" y="757" width="4.7774%" height="15" fill="rgb(227,165,31)" fg:x="1910849" fg:w="95868"/><text x="95.4726%" y="767.50">&lt;pbscr..</text></g><g><title>&lt;pbscript::parser::statement::Statement as pbscript::parser::Parse&gt;::parse (95,868 samples, 4.78%)</title><rect x="95.2226%" y="741" width="4.7774%" height="15" fill="rgb(228,167,24)" fg:x="1910849" fg:w="95868"/><text x="95.4726%" y="751.50">&lt;pbscr..</text></g><g><title>pbscript::parser::statement::Statement::parse_assignment (95,868 samples, 4.78%)</title><rect x="95.2226%" y="725" width="4.7774%" height="15" fill="rgb(228,143,12)" fg:x="1910849" fg:w="95868"/><text x="95.4726%" y="735.50">pbscri..</text></g><g><title>&lt;pbscript::parser::expression::Expression as pbscript::parser::Parse&gt;::parse (95,868 samples, 4.78%)</title><rect x="95.2226%" y="709" width="4.7774%" height="15" fill="rgb(249,149,8)" fg:x="1910849" fg:w="95868"/><text x="95.4726%" y="719.50">&lt;pbscr..</text></g><g><title>pbscript::lexer::TokenStream::peek_token (95,868 samples, 4.78%)</title><rect x="95.2226%" y="693" width="4.7774%" height="15" fill="rgb(243,35,44)" fg:x="1910849" fg:w="95868"/><text x="95.4726%" y="703.50">pbscri..</text></g><g><title>pbscript::lexer::TokenStream::peek_nth_token (95,868 samples, 4.78%)</title><rect x="95.2226%" y="677" width="4.7774%" height="15" fill="rgb(246,89,9)" fg:x="1910849" fg:w="95868"/><text x="95.4726%" y="687.50">pbscri..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (95,868 samples, 4.78%)</title><rect x="95.2226%" y="661" width="4.7774%" height="15" fill="rgb(233,213,13)" fg:x="1910849" fg:w="95868"/><text x="95.4726%" y="671.50">core::..</text></g></svg></svg>